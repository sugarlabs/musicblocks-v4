{"version":3,"file":"module.menu-9b2a1c75.js","sources":["../../../modules/menu/src/view/components/index.tsx","../../../modules/menu/src/view/index.ts","../../../modules/menu/src/index.ts"],"sourcesContent":["import type { Root } from 'react-dom/client';\nimport type { TPropsMenu } from '#/@types/components/menu';\n\nimport { createRoot } from 'react-dom/client';\n\n// -- ui items -------------------------------------------------------------------------------------\n\nimport { SImage } from '@sugarlabs/mb4-components';\n\nimport './index.scss';\n\n// -- component definition -------------------------------------------------------------------------\n\nexport function Menu(props: TPropsMenu): JSX.Element {\n  return (\n    <>\n      <>\n        <label className={`menu-btn ${!props.injected.flags.uploadFile ? 'menu-btn-hidden' : ''}`}>\n          <div className=\"menu-btn-img\">\n            <SImage asset={props.injected.assets['image.icon.uploadFile']} />\n          </div>\n          <input type=\"file\" className=\"menu-btn-input\" multiple={true}></input>\n        </label>\n\n        <button className={`menu-btn ${!props.injected.flags.recording ? 'menu-btn-hidden' : ''}`}>\n          <p className=\"menu-btn-label\">\n            <span>{'Start animation Recording'}</span>\n          </p>\n          <div className=\"menu-btn-img\">\n            <SImage asset={props.injected.assets['image.icon.startRecording']} />\n          </div>\n        </button>\n\n        <button className={`menu-btn ${!props.injected.flags.recording ? 'menu-btn-hidden' : ''}`}>\n          <p className=\"menu-btn-label\">\n            <span>{'Stop animation Recording'}</span>\n          </p>\n          <div className=\"menu-btn-img\">\n            <SImage asset={props.injected.assets['image.icon.stopRecording']} />\n          </div>\n        </button>\n\n        <button\n          className={`menu-btn ${!props.injected.flags.exportDrawing ? 'menu-btn-hidden' : ''}`}\n        >\n          <p className=\"menu-btn-label\">\n            <span>{'Save mouse artwork as PNG'}</span>\n          </p>\n          <div className=\"menu-btn-img\">\n            <SImage asset={props.injected.assets['image.icon.exportDrawing']} />\n          </div>\n        </button>\n\n        <label className={`menu-btn ${!props.injected.flags.loadProject ? 'menu-btn-hidden' : ''}`}>\n          <div className=\"menu-btn-img\">\n            <SImage asset={props.injected.assets['image.icon.loadProject']} />\n          </div>\n          <input type=\"file\" className=\"menu-btn-input\" accept=\"text/html\"></input>\n        </label>\n\n        <button\n          className={`menu-btn ${!props.injected.flags.saveProject ? 'menu-btn-hidden' : ''}`}\n        >\n          <p className=\"menu-btn-label\">\n            <span>{'Save Project as HTML'}</span>\n          </p>\n          <div className=\"menu-btn-img\">\n            <SImage asset={props.injected.assets['image.icon.saveProjectHTML']} />\n          </div>\n        </button>\n      </>\n\n      {/* -- RUN ----------------------------------------------------------- */}\n      <button\n        className={`menu-btn ${props.states['running'] ? 'menu-btn-hidden' : ''}`}\n        onClick={() => (props.handlers.run ? props.handlers.run() : undefined)}\n      >\n        <p className=\"menu-btn-label\">\n          <span>{props.injected.i18n['menu.run']}</span>\n        </p>\n        <div className=\"menu-btn-img\">\n          <SImage asset={props.injected.assets['image.icon.run']} />\n        </div>\n      </button>\n\n      {/* -- STOP ---------------------------------------------------------- */}\n      <button\n        className={`menu-btn ${!props.states['running'] ? 'menu-btn-hidden' : ''}`}\n        onClick={() => (props.handlers.stop ? props.handlers.stop() : undefined)}\n      >\n        <p className=\"menu-btn-label\">\n          <span>{props.injected.i18n['menu.stop']}</span>\n        </p>\n        <div className=\"menu-btn-img\">\n          <SImage asset={props.injected.assets['image.icon.stop']} />\n        </div>\n      </button>\n\n      {/* -- RESET --------------------------------------------------------- */}\n      <button\n        className=\"menu-btn\"\n        onClick={() => (props.handlers.reset ? props.handlers.reset() : undefined)}\n      >\n        <p className=\"menu-btn-label\">\n          <span>{props.injected.i18n['menu.reset']}</span>\n        </p>\n        <div className=\"menu-btn-img\">\n          <SImage asset={props.injected.assets['image.icon.reset']} />\n        </div>\n      </button>\n    </>\n  );\n}\n\n// -- private variables ----------------------------------------------------------------------------\n\nlet _rootContainer: Root;\n\n// -- public functions -----------------------------------------------------------------------------\n\nexport async function renderComponent(container: HTMLElement, props: TPropsMenu): Promise<void> {\n  if (_rootContainer === undefined) _rootContainer = createRoot(container);\n  _rootContainer.render(<Menu {...props} />);\n\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","import type { TPropsMenu } from '#/@types/components/menu';\n\nimport { createItem } from '@sugarlabs/mb4-view';\n\nimport { renderComponent } from './components';\nimport { injected } from '..';\n\n// -- private variables ----------------------------------------------------------------------------\n\nlet _props: TPropsMenu;\nlet _container: HTMLElement;\n\n// -- public functions -----------------------------------------------------------------------------\n\n/**\n * Sets up the DOM.\n */\nexport async function mount(): Promise<void> {\n    _container = createItem({\n        location: 'toolbar',\n        type: 'container',\n        position: 'cluster-b',\n    });\n    _container.id = 'menu';\n\n    _props = {\n        injected,\n        states: { running: false },\n        handlers: {},\n    };\n\n    await renderComponent(_container, { ..._props });\n}\n\nexport async function updateState(state: keyof TPropsMenu['states'], value: boolean) {\n    _props.states[state] = value;\n    await renderComponent(_container, { ..._props });\n}\n\nexport async function updateHandler(\n    handler: keyof TPropsMenu['handlers'],\n    callback: CallableFunction,\n) {\n    _props.handlers[handler] = callback;\n    await renderComponent(_container, { ..._props });\n}\n","import type { TInjectedMenu } from '#/@types/components/menu';\n\nimport { getCrumbs, run } from '@sugarlabs/musicblocks-v4-lib';\nimport { emitEvent } from '@sugarlabs/mb4-events';\n\nimport { mount as mountView, updateHandler, updateState } from './view';\n\n// -- public functions -----------------------------------------------------------------------------\n\n/**\n * Mounts the Menu component.\n */\nexport async function mount(): Promise<void> {\n    await mountView();\n}\n\n/**\n * Initializes the Menu component.\n */\nexport async function setup(): Promise<void> {\n    await updateHandler('run', () => {\n        const crumbs = getCrumbs();\n        if (crumbs.length !== 0) run(getCrumbs()[0].nodeID);\n        updateState('running', true);\n        setTimeout(() => updateState('running', false));\n        emitEvent('menu.run');\n    });\n\n    await updateHandler('stop', () => {\n        updateState('running', false);\n        emitEvent('menu.stop');\n    });\n\n    await updateHandler('reset', () => {\n        updateState('running', false);\n        emitEvent('menu.reset');\n    });\n}\n\n// -- public variables -----------------------------------------------------------------------------\n\nexport const injected: TInjectedMenu = {\n    // @ts-ignore\n    flags: undefined,\n    // @ts-ignore\n    i18n: undefined,\n    // @ts-ignore\n    assets: undefined,\n};\n"],"names":["Menu","props","jsxs","Fragment","jsx","SImage","_rootContainer","renderComponent","container","createRoot","resolve","_props","_container","mount","createItem","injected","updateState","state","value","updateHandler","handler","callback","mountView","setup","getCrumbs","run","emitEvent"],"mappings":"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"}