{"version":3,"file":"index-e642236f.js","sources":["../../../lib/view/src/components/toolbar/resources/pin.svg","../../../lib/view/src/components/toolbar/resources/unpin.svg","../../../lib/view/src/components/toolbar/index.tsx"],"sourcesContent":["export default \"__VITE_ASSET__6b5ccf81__\"","export default \"__VITE_ASSET__f6c61f11__\"","import { useEffect, useRef } from 'react';\n\n// -- resources ------------------------------------------------------------------------------------\n\nimport pinSVG from './resources/pin.svg';\nimport unpinSVG from './resources/unpin.svg';\n\n// -- stylesheet -----------------------------------------------------------------------------------\n\nimport './index.scss';\n\n// -- component definition -------------------------------------------------------------------------\n\n/**\n * Toolbar component.\n * @param props - React props (title)\n * @returns root JSX element of the Toolbar component\n */\nexport default function (): JSX.Element {\n  const btnPinRef = useRef(null);\n  const btnUnpinRef = useRef(null);\n\n  useEffect(() => {\n    btnPinRef.current!;\n    btnUnpinRef.current!;\n\n    const loadSVG = (element: HTMLButtonElement, svgSrc: string) => {\n      fetch(svgSrc)\n        .then((res) => res.text())\n        .then((svg) => (element.innerHTML = svg));\n    };\n\n    loadSVG(btnPinRef.current!, pinSVG);\n    loadSVG(btnUnpinRef.current!, unpinSVG);\n  }, []);\n\n  return (\n    <div id=\"toolbar-wrapper\">\n      <section id=\"toolbar\">\n        <div className=\"toolbar-cluster\" id=\"toolbar-cluster-a\"></div>\n        <div className=\"toolbar-cluster\" id=\"toolbar-cluster-b\"></div>\n      </section>\n      <section className=\"toolbar-extended toolbar-extended-hidden\" id=\"toolbar-float\">\n        <div className=\"toolbar-extended-head\" id=\"toolbar-float-head\">\n          <h3 className=\"toolbar-extended-head-title\" id=\"toolbar-float-title\">\n            Header\n          </h3>\n          <button className=\"toolbar-extended-head-btn\" id=\"toolbar-float-btn-pin\" ref={btnPinRef}>\n            Pin\n          </button>\n        </div>\n        <div className=\"toolbar-extended-content\" id=\"toolbar-float-content\"></div>\n      </section>\n      <section className=\"toolbar-extended toolbar-extended-hidden\" id=\"toolbar-pinned\">\n        <div className=\"toolbar-extended-head\" id=\"toolbar-pinned-head\">\n          <h3 className=\"toolbar-extended-head-title\" id=\"toolbar-pinned-title\">\n            Header\n          </h3>\n          <button\n            className=\"toolbar-extended-head-btn\"\n            id=\"toolbar-pinned-btn-unpin\"\n            ref={btnUnpinRef}\n          >\n            Unpin\n          </button>\n        </div>\n        <div className=\"toolbar-extended-content\" id=\"toolbar-pinned-content\"></div>\n      </section>\n    </div>\n  );\n}\n\n/**\n * Mounts Extended Toolbar subcomponent.\n * @param title title of the Extended Toolbar\n * @param type `float` or `pinned` Extended Toolbar\n * @param hooks external callbacks to hook on to component's actions\n * @returns DOM element of the Extended Toolbar's content container\n */\nexport function setToolbarExtended(\n  title: string,\n  type: 'float' | 'pinned',\n  hooks: {\n    pin: CallableFunction;\n    unpin: CallableFunction;\n  },\n): HTMLDivElement {\n  const float = document.getElementById('toolbar-float')!;\n  const pinned = document.getElementById('toolbar-pinned')!;\n\n  const _btnFloatPin = float.children[0].children[1] as HTMLButtonElement;\n  const btnFloatPin = _btnFloatPin.cloneNode(true);\n  _btnFloatPin.parentNode!.replaceChild(btnFloatPin, _btnFloatPin);\n\n  const _btnPinnedUnpin = pinned.children[0].children[1] as HTMLButtonElement;\n  const btnPinnedUnpin = _btnPinnedUnpin.cloneNode(true);\n  _btnPinnedUnpin.parentNode!.replaceChild(btnPinnedUnpin, _btnPinnedUnpin);\n\n  float.classList.remove('toolbar-extended-hidden');\n  pinned.classList.remove('toolbar-extended-hidden');\n\n  if (type === 'float') {\n    pinned.classList.add('toolbar-extended-hidden');\n    float.classList.remove('toolbar-extended-hidden');\n  } else {\n    float.classList.add('toolbar-extended-hidden');\n    pinned.classList.remove('toolbar-extended-hidden');\n  }\n\n  btnFloatPin.addEventListener('click', () => {\n    float.classList.add('toolbar-extended-hidden');\n    pinned.classList.remove('toolbar-extended-hidden');\n\n    hooks.pin();\n  });\n  btnPinnedUnpin.addEventListener('click', () => {\n    pinned.classList.add('toolbar-extended-hidden');\n    float.classList.remove('toolbar-extended-hidden');\n\n    hooks.unpin();\n  });\n\n  const toolbar = type === 'float' ? float : pinned;\n\n  const headTitle = toolbar.children[0].children[0] as HTMLHeadingElement;\n  headTitle.innerHTML = title;\n\n  return toolbar.children[1] as HTMLDivElement;\n}\n\nexport function unsetToolbarExtended(): void {\n  const float = document.getElementById('toolbar-float')!;\n  const pinned = document.getElementById('toolbar-pinned')!;\n\n  const _btnFloatPin = float.children[0].children[1] as HTMLButtonElement;\n  const btnFloatPin = _btnFloatPin.cloneNode(true);\n  _btnFloatPin.parentNode!.replaceChild(btnFloatPin, _btnFloatPin);\n\n  const _btnPinnedUnpin = pinned.children[0].children[1] as HTMLButtonElement;\n  const btnPinnedUnpin = _btnPinnedUnpin.cloneNode(true);\n  _btnPinnedUnpin.parentNode!.replaceChild(btnPinnedUnpin, _btnPinnedUnpin);\n\n  float.classList.add('toolbar-extended-hidden');\n  pinned.classList.add('toolbar-extended-hidden');\n}\n"],"names":["pinSVG","unpinSVG","Toolbar","btnPinRef","useRef","btnUnpinRef","useEffect","loadSVG","element","svgSrc","res","svg","jsxs","jsx","setToolbarExtended","title","type","hooks","float","pinned","_btnFloatPin","btnFloatPin","_btnPinnedUnpin","btnPinnedUnpin","toolbar","headTitle","unsetToolbarExtended"],"mappings":"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"}