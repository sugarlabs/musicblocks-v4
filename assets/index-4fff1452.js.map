{"version":3,"file":"index-4fff1452.js","sources":["../../src/splash/index.tsx"],"sourcesContent":["import type { Root } from 'react-dom/client';\nimport type { TAsset } from '#/@types/assets';\n\nimport { flushSync } from 'react-dom';\nimport { createRoot } from 'react-dom/client';\n\nimport { SImage } from '@sugarlabs/mb4-components';\nimport { mountViewOverlay, unmountViewOverlay } from '@sugarlabs/mb4-view';\n\n// -- ui items -------------------------------------------------------------------------------------\n\nimport './index.scss';\n\n// -------------------------------------------------------------------------------------------------\n\ntype TAssetIdentifierView = 'image.logo';\n\nexport const definition: {\n  assets: TAssetIdentifierView[];\n} = {\n  assets: ['image.logo'],\n};\n\nexport const injected: {\n  assets: Record<TAssetIdentifierView, TAsset>;\n} = {\n  // @ts-ignore\n  assets: undefined,\n};\n\n// -- component definition -------------------------------------------------------------------------\n\n/**\n * React component definition for the Splash component.\n */\nexport function Splash(props: {\n  /** Image asset for logo. */\n  logo: TAsset;\n  /** Load progress [0 - 100]. */\n  progress: number;\n}): JSX.Element {\n  return (\n    <div id=\"splash-container\">\n      <div id=\"splash-logo\">\n        <SImage asset={props.logo} />\n      </div>\n      <div id=\"splash-progress-bar\">\n        <div id=\"splash-progress\" style={{ width: `${props.progress}%` }} />\n      </div>\n    </div>\n  );\n}\n\n// -- private variables ----------------------------------------------------------------------------\n\nlet _rootContainer: Root;\n\n// -- private functions ----------------------------------------------------------------------------\n\n/**\n * Helper function to render/update the Splash component.\n * @param progress progress bar value [0 - 100]\n */\nasync function _renderComponent(progress?: number): Promise<void> {\n  return new Promise((resolve) => {\n    flushSync(() => {\n      _rootContainer.render(\n        <Splash\n          logo={injected.assets['image.logo']}\n          progress={Math.min(Math.max(progress || 0, 0), 100)}\n        ></Splash>,\n      );\n      requestAnimationFrame(() => resolve());\n    });\n  });\n}\n\n// -- public functions -----------------------------------------------------------------------------\n\n/**\n * Mounts the Splash component in the view overlay.\n */\nexport async function mountSplash(): Promise<void> {\n  await mountViewOverlay(async (container: HTMLElement) => {\n    _rootContainer = createRoot(container);\n    await _renderComponent();\n  });\n}\n\n/**\n * Updates the Splash component in the view overlay.\n * @param progress progress bar value [0 - 100]\n */\nexport async function updateSplash(progress: number): Promise<void> {\n  await _renderComponent(progress);\n}\n\n/**\n * Unmounts the Splash component from the view overlay.\n */\nexport async function unmountSplash(): Promise<void> {\n  await unmountViewOverlay();\n  return new Promise((resolve) => {\n    flushSync(() => {\n      _rootContainer.unmount();\n      requestAnimationFrame(() => resolve());\n    });\n  });\n}\n"],"names":["definition","injected","Splash","props","jsxs","jsx","SImage","_rootContainer","_renderComponent","progress","resolve","flushSync","mountSplash","mountViewOverlay","container","createRoot","updateSplash","unmountSplash","unmountViewOverlay"],"mappings":"gLAiBO,MAAMA,EAET,CACF,OAAQ,CAAC,YAAY,CACvB,EAEaC,EAET,CAEF,OAAQ,MACV,EAOO,SAASC,EAAOC,EAKP,CAEZ,OAAAC,EAAC,MAAI,CAAA,GAAG,mBACN,SAAA,CAACC,EAAA,MAAA,CAAI,GAAG,cACN,SAAAA,EAACC,GAAO,MAAOH,EAAM,KAAM,CAC7B,CAAA,EACCE,EAAA,MAAA,CAAI,GAAG,sBACN,WAAC,MAAI,CAAA,GAAG,kBAAkB,MAAO,CAAE,MAAO,GAAGF,EAAM,YAAe,CAAA,EACpE,CACF,CAAA,CAAA,CAEJ,CAIA,IAAII,EAQJ,eAAeC,EAAiBC,EAAkC,CACzD,OAAA,IAAI,QAASC,GAAY,CAC9BC,EAAAA,UAAU,IAAM,CACCJ,EAAA,OACbF,EAACH,EAAA,CACC,KAAMD,EAAS,OAAO,YAAY,EAClC,SAAU,KAAK,IAAI,KAAK,IAAIQ,GAAY,EAAG,CAAC,EAAG,GAAG,CAAA,CACnD,CAAA,EAEmB,sBAAA,IAAMC,GAAS,CAAA,CACtC,CAAA,CACF,CACH,CAOA,eAAsBE,GAA6B,CAC3C,MAAAC,EAAiB,MAAOC,GAA2B,CACvDP,EAAiBQ,EAAWD,CAAS,EACrC,MAAMN,EAAiB,CAAA,CACxB,CACH,CAMA,eAAsBQ,EAAaP,EAAiC,CAClE,MAAMD,EAAiBC,CAAQ,CACjC,CAKA,eAAsBQ,GAA+B,CACnD,aAAMC,EAAmB,EAClB,IAAI,QAASR,GAAY,CAC9BC,EAAAA,UAAU,IAAM,CACdJ,EAAe,QAAQ,EACD,sBAAA,IAAMG,GAAS,CAAA,CACtC,CAAA,CACF,CACH"}