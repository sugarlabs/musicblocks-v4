{"version":3,"file":"lib.assets-d64954a0.js","sources":["../../../lib/assets/src/loaders.ts","../../../lib/assets/src/index.ts","../../../lib/assets/res/image/logo.png","../../../lib/assets/res/image/icon/build.svg","../../../lib/assets/res/image/icon/help.svg","../../../lib/assets/res/image/icon/pin.svg","../../../lib/assets/res/image/icon/unpin.svg","../../../lib/assets/res/image/icon/run.svg","../../../lib/assets/res/image/icon/stop.svg","../../../lib/assets/res/image/icon/reset.svg","../../../lib/assets/res/image/icon/saveProjectHTML.svg","../../../lib/assets/res/image/icon/exportDrawing.svg","../../../lib/assets/res/image/icon/startRecording.svg","../../../lib/assets/res/image/icon/stopRecording.svg","../../../lib/assets/res/image/icon/uploadFile.svg","../../../lib/assets/res/image/icon/loadProject.svg","../../../lib/assets/res/image/icon/close.svg","../../../lib/assets/res/image/icon/code.svg","../../../lib/assets/res/image/icon/mouse.svg","../../../lib/assets/res/audio/guitar.wav","../../../lib/assets/res/audio/piano.wav","../../../lib/assets/res/audio/snare.wav","../../../lib/assets/res/index.ts"],"sourcesContent":["import { TAsset, TAssetType } from '#/@types/assets';\n\n/**\n * Stores the loader map.\n * @description A loader transforms the asset data from `base64` if required.\n */\nconst loaders: Partial<Record<TAssetType, (asset: TAsset) => Promise<TAsset>>> = {\n    'image/svg+xml': async (asset: TAsset) => {\n        return fetch(asset.data)\n            .then((res) => res.text())\n            .then((res) => ({ ...asset, data: res }));\n    },\n};\n\nexport default loaders;\n","import { TAsset, TAssetManifest, TAssetType } from '#/@types/assets';\n\nimport loaders from './loaders';\n\n// -- private variables ----------------------------------------------------------------------------\n\n/** Stores the asset map. */\nconst _assets: { [identifier: string]: TAsset } = {};\n\n// -- private functions ----------------------------------------------------------------------------\n\n/**\n * Stores an asset into the asset map (after transforming using the loader if present).\n * @param identifier string to uniquely identify the asset\n * @param asset asset item\n */\nasync function _loadAsset(identifier: string, asset: TAsset): Promise<void> {\n    _assets[identifier] =\n        asset.type in loaders ? await loaders[asset.type]!.call(null, asset) : asset;\n}\n\n// -- public functions -----------------------------------------------------------------------------\n\n/**\n * Returns an asset entry.\n * @param identifier asset identifier\n */\nexport function getAsset(identifier: string): TAsset | undefined {\n    return _assets[identifier];\n}\n\n/**\n * Returns map of asset entries corresponding to asset identifiers.\n * @param identifiers list of asset identifiers\n */\nexport function getAssets(identifiers: string[]): { [identifier: string]: TAsset | undefined } {\n    return Object.fromEntries(identifiers.map((identifier) => [identifier, getAsset(identifier)]));\n}\n\n/**\n * Fetches an asset file and loads them into the repository.\n * @param identifier string to uniquely identify the asset\n * @param manifest asset details\n */\nexport async function importAsset(identifier: string, manifest: TAssetManifest): Promise<void> {\n    let { path, meta } = manifest;\n    path = import.meta.env.PROD\n        ? path.replace(new RegExp(`${import.meta.env.BASE_URL}`), '')\n        : path;\n\n    const data = await fetch(path)\n        .then((response) => response.blob())\n        .then((blob) => {\n            return new Promise<string>((resolve, reject) => {\n                try {\n                    const reader = new FileReader();\n                    reader.onload = () => resolve(reader.result as string);\n                    reader.readAsDataURL(blob);\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        });\n\n    await _loadAsset(identifier, {\n        type: data.match(/data:(.+);base64/)![1] as TAssetType,\n        data,\n        meta: meta !== undefined ? meta : {},\n    });\n}\n\n/**\n * Fetches a list of asset files and loads them into the repository.\n * @param items asset items\n * @param callback callback function to call after each asset item is imported\n */\nexport async function importAssets(\n    items: {\n        /** String to uniquely identify the asset. */\n        identifier: string;\n        /** Asset details. */\n        manifest: TAssetManifest;\n    }[],\n    callback?: (assetId: string) => unknown,\n): Promise<void> {\n    await Promise.all(\n        items.map(({ identifier, manifest }) =>\n            importAsset(identifier, manifest).then(() => {\n                if (callback !== undefined) callback(identifier);\n            }),\n        ),\n    );\n}\n","export default \"__VITE_ASSET__ab211233__\"","export default \"__VITE_ASSET__984a0d8b__\"","export default \"__VITE_ASSET__c219f887__\"","export default \"__VITE_ASSET__b7b71533__\"","export default \"__VITE_ASSET__69bdbfe7__\"","export default \"__VITE_ASSET__0559111d__\"","export default \"__VITE_ASSET__8b943b8f__\"","export default \"__VITE_ASSET__2844bff6__\"","export default \"__VITE_ASSET__c672c8aa__\"","export default \"__VITE_ASSET__85d84927__\"","export default \"__VITE_ASSET__4879d0ec__\"","export default \"__VITE_ASSET__0ef7a880__\"","export default \"__VITE_ASSET__defaf452__\"","export default \"__VITE_ASSET__658a16d4__\"","export default \"__VITE_ASSET__aaabd9ba__\"","export default \"__VITE_ASSET__3b1513cf__\"","export default \"__VITE_ASSET__18428cff__\"","export default \"__VITE_ASSET__955a07d2__\"","export default \"__VITE_ASSET__b110e953__\"","export default \"__VITE_ASSET__7021ec5f__\"","import { TAssetManifest } from '#/@types/assets';\n\n// -------------------------------------------------------------------------------------------------\n\n/*\n * please keep related items grouped together for better readability\n */\n\nimport imageLogo from './image/logo.png';\n\nimport imageIconBuild from './image/icon/build.svg';\nimport imageIconHelp from './image/icon/help.svg';\nimport imageIconPin from './image/icon/pin.svg';\nimport imageIconUnpin from './image/icon/unpin.svg';\n\nimport imageIconRun from './image/icon/run.svg';\nimport imageIconStop from './image/icon/stop.svg';\nimport imageIconReset from './image/icon/reset.svg';\nimport imageIconSaveProjectHTML from './image/icon/saveProjectHTML.svg';\nimport imageIconExportDrawing from './image/icon/exportDrawing.svg';\nimport imageIconStartRecording from './image/icon/startRecording.svg';\nimport imageIconStopRecording from './image/icon/stopRecording.svg';\nimport imageIconUploadFile from './image/icon/uploadFile.svg';\nimport imageIconLoadProject from './image/icon/loadProject.svg';\n\nimport imageIconClose from './image/icon/close.svg';\nimport imageIconCode from './image/icon/code.svg';\n\nimport imageIconMouse from './image/icon/mouse.svg';\n\nimport audioGuitar from './audio/guitar.wav';\nimport audioPiano from './audio/piano.wav';\nimport audioSnare from './audio/snare.wav';\n\n// -------------------------------------------------------------------------------------------------\n\nconst manifest: {\n    [identifier: string]: TAssetManifest;\n} = {\n    /*\n     * please follow same import grouping as above\n     */\n\n    'image.logo': {\n        path: imageLogo,\n    },\n\n    'image.icon.build': {\n        path: imageIconBuild,\n    },\n    'image.icon.help': {\n        path: imageIconHelp,\n    },\n    'image.icon.pin': {\n        path: imageIconPin,\n    },\n    'image.icon.unpin': {\n        path: imageIconUnpin,\n    },\n\n    'image.icon.run': {\n        path: imageIconRun,\n    },\n    'image.icon.stop': {\n        path: imageIconStop,\n    },\n    'image.icon.reset': {\n        path: imageIconReset,\n    },\n    'image.icon.saveProjectHTML': {\n        path: imageIconSaveProjectHTML,\n    },\n    'image.icon.exportDrawing': {\n        path: imageIconExportDrawing,\n    },\n    'image.icon.startRecording': {\n        path: imageIconStartRecording,\n    },\n    'image.icon.stopRecording': {\n        path: imageIconStopRecording,\n    },\n    'image.icon.uploadFile': {\n        path: imageIconUploadFile,\n    },\n    'image.icon.loadProject': {\n        path: imageIconLoadProject,\n    },\n\n    'image.icon.close': {\n        path: imageIconClose,\n    },\n    'image.icon.code': {\n        path: imageIconCode,\n    },\n\n    'image.icon.mouse': {\n        path: imageIconMouse,\n    },\n\n    'audio.guitar': {\n        path: audioGuitar,\n        meta: {\n            name: 'guitar',\n            category: 'strings',\n            tonal: true,\n            centerNote: 'c4',\n            defaultVolume: 50,\n        },\n    },\n    'audio.piano': {\n        path: audioPiano,\n        meta: {\n            name: 'piano',\n            category: 'percussion',\n            tonal: true,\n            centerNote: 'c4',\n            defaultVolume: 100,\n        },\n    },\n    'audio.snare': {\n        path: audioSnare,\n        meta: {\n            name: 'snare',\n            category: 'percussion',\n            tonal: false,\n            centerNote: 'c3',\n            defaultVolume: 50,\n        },\n    },\n};\n\nexport default manifest;\n"],"names":["loaders","asset","res","_assets","_loadAsset","identifier","getAsset","getAssets","identifiers","importAsset","manifest","path","meta","data","response","blob","resolve","reject","reader","e","importAssets","items","callback","imageLogo","imageIconBuild","imageIconHelp","imageIconPin","imageIconUnpin","imageIconRun","imageIconStop","imageIconReset","imageIconSaveProjectHTML","imageIconExportDrawing","imageIconStartRecording","imageIconStopRecording","imageIconUploadFile","imageIconLoadProject","imageIconClose","imageIconCode","imageIconMouse","audioGuitar","audioPiano","audioSnare"],"mappings":"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"}