import{m as l}from"./index-4245e63e.js";const a={};async function d(n){await a[n].mount()}async function h(n){await a[n].setup()}function g(n){return n in a?a[n]:null}async function w(n,e){return a[n]=await e(),a[n]}async function v(n,e,r){return Object.fromEntries(await Promise.all(n.map(t=>[t,e[t].importFunc]).map(([t,u])=>w(t,u).then(m=>(r!==void 0&&r(t),[t,m]))))),a}async function C(n,e){return new Promise(r=>{const t=n.entries();async function u(m){if(m.done)return;const[s,i]=m.value;return await d(i),e!==void 0&&e(i),u(t.next())}u(t.next()).then(()=>requestAnimationFrame(()=>r()))})}async function A(n,e){return new Promise(r=>{const t=n.entries();async function u(m){if(m.done)return;const[s,i]=m.value;return await h(i),e!==void 0&&e(i),u(t.next())}u(t.next()).then(()=>requestAnimationFrame(()=>r()))})}function E(n){l.registerElementSpecificationEntries(l.librarySpecification),n.filter(({filter:e})=>e!==void 0).map(({id:e,filter:r})=>r===!0?{id:e,specification:a[e].elements}:{id:e,specification:Object.fromEntries(Object.entries(a[e].elements).filter(([t])=>r==null?void 0:r.includes(t)))}).map(({specification:e})=>e).filter(e=>e!==void 0).forEach(e=>l.registerElementSpecificationEntries(e))}function _(n){const e=n.length,t=(()=>{const s=new Array(e);for(let i=0;i<e;i++){const f=n[i];s[i]=new Array(e),s[i].fill(!1);for(let o=0;o<e;o++){const c=n[o];f.dependencies.includes(c.id)&&(s[i][o]=!0)}}return s})();return(()=>{let s=[],i=[],f=n.map((o,c)=>c);for(;f.length>0;){for(let o=0;o<e;o++){let c=!1;for(let p=0;p<e;p++)if(t[o][p]===!0){c=!0;break}!c&&!s.includes(o)&&(i.push(o),f.splice(f.findIndex(p=>p===o),1))}if(i.length===0)throw Error("Invalid Config: dependency resolution results in a cyclic graph");for(const o of i){s.push(o);for(let c=0;c<e;c++)t[c][o]=!1}i=[]}return s})().map(s=>n[s].id)}export{g as getComponent,w as importComponent,v as importComponents,C as mountComponents,E as registerElements,_ as serializeComponentDependencies,A as setupComponents};
//# sourceMappingURL=lib.config-257eb5b5.js.map
